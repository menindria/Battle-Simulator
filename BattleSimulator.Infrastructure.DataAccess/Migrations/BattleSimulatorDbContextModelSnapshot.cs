// <auto-generated />
using System;
using BattleSimulator.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BattleSimulator.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(BattleSimulatorDbContext))]
    partial class BattleSimulatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BattleSimulator.Domain.Army", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BattleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("NumberOfUnits");

                    b.Property<int>("StrategyAndAttackOption");

                    b.HasKey("Id");

                    b.HasIndex("BattleId");

                    b.ToTable("Army");
                });

            modelBuilder.Entity("BattleSimulator.Domain.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("Started");

                    b.HasKey("Id");

                    b.ToTable("Battle");
                });

            modelBuilder.Entity("BattleSimulator.Domain.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArmyOneId");

                    b.Property<int?>("ArmyTwoId");

                    b.Property<int>("BattleId");

                    b.Property<int>("LogType");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("ArmyOneId");

                    b.HasIndex("ArmyTwoId");

                    b.HasIndex("BattleId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("BattleSimulator.Domain.Army", b =>
                {
                    b.HasOne("BattleSimulator.Domain.Battle", "Battle")
                        .WithMany("Armies")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BattleSimulator.Domain.Log", b =>
                {
                    b.HasOne("BattleSimulator.Domain.Army", "ArmyOne")
                        .WithMany("Logs")
                        .HasForeignKey("ArmyOneId");

                    b.HasOne("BattleSimulator.Domain.Army", "ArmyTwo")
                        .WithMany()
                        .HasForeignKey("ArmyTwoId");

                    b.HasOne("BattleSimulator.Domain.Battle", "Battle")
                        .WithMany("Logs")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
